/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AIChat,
  AIChatInterface,
} from "../../../contracts/Chat.sol/AIChat";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes21",
        name: "_roflAppID",
        type: "bytes21",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reply",
        type: "string",
      },
    ],
    name: "AgentReplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProcessingMessages",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserHistory",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "history",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "prompt",
        type: "string",
      },
      {
        internalType: "string",
        name: "plugin",
        type: "string",
      },
    ],
    name: "processPrompt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processingMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roflAppID",
    outputs: [
      {
        internalType: "bytes21",
        name: "",
        type: "bytes21",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reply",
        type: "string",
      },
    ],
    name: "submitAgentReply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d81380380610d8183398101604081905261002f9161004e565b600080546001600160a81b03191660589290921c91909117905561007f565b60006020828403121561006057600080fd5b81516001600160581b03198116811461007857600080fd5b9392505050565b610cf38061008e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c44adfa81161005b578063c44adfa81461010c578063e748e78114610121578063efae93df14610134578063feb8b90f1461015e57600080fd5b80634fb3d3b11461008d5780637718f4ec146100b657806386f79edb146100d7578063baddaeb8146100f9575b600080fd5b6100a061009b36600461087d565b610166565b6040516100ad919061089f565b60405180910390f35b6100c96100c43660046108e3565b6101d2565b6040519081526020016100ad565b6100ea6100e536600461090d565b610203565b6040516100ad9392919061096c565b6100c961010736600461090d565b610473565b61011f61011a366004610a52565b610494565b005b6100c961012f366004610a99565b610650565b6000546101419060581b81565b6040516affffffffffffffffffffff1990911681526020016100ad565b6100a0610809565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156101c657602002820191906000526020600020905b8154815260200190600101908083116101b2575b50505050509050919050565b600360205281600052604060002081815481106101ee57600080fd5b90600052602060002001600091509150505481565b606080606060018054905084106102565760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b595cdcd859d948125160721b60448201526064015b60405180910390fd5b6001848154811061026957610269610af3565b90600052602060002090600402016000016001858154811061028d5761028d610af3565b9060005260206000209060040201600201600186815481106102b1576102b1610af3565b90600052602060002090600402016001018280546102ce90610b09565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa90610b09565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b5050505050925081805461035a90610b09565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610b09565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b505050505091508080546103e690610b09565b80601f016020809104026020016040519081016040528092919081815260200182805461041290610b09565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b505050505090509250925092509193909250565b6002818154811061048357600080fd5b600091825260209091200154905081565b60015482106104da5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081b595cdcd859d948125160721b604482015260640161024d565b60405180604001604052806004815260200163446f6e6560e01b8152506001838154811061050a5761050a610af3565b906000526020600020906004020160030190816105279190610b92565b50806001838154811061053c5761053c610af3565b906000526020600020906004020160010190816105599190610b92565b5060005b60025481101561061357826002828154811061057b5761057b610af3565b906000526020600020015403610601576002805461059b90600190610c68565b815481106105ab576105ab610af3565b9060005260206000200154600282815481106105c9576105c9610af3565b60009182526020909120015560028054806105e6576105e6610c7b565b60019003818190600052602060002001600090559055610613565b8061060b81610c91565b91505061055d565b50817ffb74da3aa519f9bdbd6f2b6ceea081a1654b10ac18cd45077a51ed225bd89d9a826040516106449190610caa565b60405180910390a25050565b60008083511180156106655750610118835111155b6106a25760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1c9bdb5c1d60921b604482015260640161024d565b60018054604080516080810182528681528151602081810184526000808352818401929092528284018890528351808501909452600a84526950726f63657373696e6760b01b90840152606082019290925282840184559290528151909190600483027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906107349082610b92565b50602082015160018201906107499082610b92565b506040820151600282019061075e9082610b92565b50606082015160038201906107739082610b92565b5050336000818152600360209081526040808320805460018082018355918552838520018790556002805491820181559093527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90920185905590518481529192507ff94b406e4a887d40eeed920c1d145a8f1279ea71af35bffbd9862c4fb0c3fa9d910160405180910390a290505b92915050565b6060600280548060200260200160405190810160405280929190818152602001828054801561085757602002820191906000526020600020905b815481526020019060010190808311610843575b5050505050905090565b80356001600160a01b038116811461087857600080fd5b919050565b60006020828403121561088f57600080fd5b61089882610861565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156108d7578351835292840192918401916001016108bb565b50909695505050505050565b600080604083850312156108f657600080fd5b6108ff83610861565b946020939093013593505050565b60006020828403121561091f57600080fd5b5035919050565b6000815180845260005b8181101561094c57602081850181015186830182015201610930565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600061097f6060830186610926565b82810360208401526109918186610926565b905082810360408401526109a58185610926565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109d657600080fd5b813567ffffffffffffffff808211156109f1576109f16109af565b604051601f8301601f19908116603f01168101908282118183101715610a1957610a196109af565b81604052838152866020858801011115610a3257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610a6557600080fd5b82359150602083013567ffffffffffffffff811115610a8357600080fd5b610a8f858286016109c5565b9150509250929050565b60008060408385031215610aac57600080fd5b823567ffffffffffffffff80821115610ac457600080fd5b610ad0868387016109c5565b93506020850135915080821115610ae657600080fd5b50610a8f858286016109c5565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610b1d57607f821691505b602082108103610b3d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b8d57600081815260208120601f850160051c81016020861015610b6a5750805b601f850160051c820191505b81811015610b8957828155600101610b76565b5050505b505050565b815167ffffffffffffffff811115610bac57610bac6109af565b610bc081610bba8454610b09565b84610b43565b602080601f831160018114610bf55760008415610bdd5750858301515b600019600386901b1c1916600185901b178555610b89565b600085815260208120601f198616915b82811015610c2457888601518255948401946001909101908401610c05565b5085821015610c425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8181038181111561080357610803610c52565b634e487b7160e01b600052603160045260246000fd5b600060018201610ca357610ca3610c52565b5060010190565b602081526000610898602083018461092656fea26469706673582212208fde42fca4c05655709195480b20e3618ec256a6b1d7735217644858e171869c64736f6c63430008140033";

type AIChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIChat__factory extends ContractFactory {
  constructor(...args: AIChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _roflAppID: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_roflAppID, overrides || {});
  }
  override deploy(
    _roflAppID: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_roflAppID, overrides || {}) as Promise<
      AIChat & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AIChat__factory {
    return super.connect(runner) as AIChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIChatInterface {
    return new Interface(_abi) as AIChatInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AIChat {
    return new Contract(address, _abi, runner) as unknown as AIChat;
  }
}
